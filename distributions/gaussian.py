__author__ = 'Daniel Gregory'

from random import uniform
from math import pi, sin, sqrt, log
from helpers.date import convert_datetime_to_seconds, days_to_seconds
from datetime import datetime


def gaussian_generator(mean, sigma):
    """
    Yields a (lazily-evaluated) generator of floats distributed according
    to a Gaussian, with standard deviation sigma. The numbers are generated
    using the Box-Muller transform.

    see: https://en.wikipedia.org/wiki/Box-Muller_transform """
    while True:
        u_1 = uniform(0, 1)
        u_2 = uniform(0, 1)
        z_1 = sqrt(-2 * log(u_1)) * sin(2 * pi * u_2)
        yield z_1 * sigma + mean


def gaussian_date_generator(mean, sigma_in_days):
    """
    Yields a generator for datetime objects where the dates are distributed
    according to a Gaussian, with standard deviation sigma. The distribution of
    dates is generated by first generating a distribution of numbers (in seconds)
    using the gaussian_generator defined above and then transforming those numbers
    back to dates.
    """
    mean_in_seconds = convert_datetime_to_seconds(mean)
    sigma_in_seconds = days_to_seconds(sigma_in_days)
    gg = gaussian_generator(mean_in_seconds, sigma_in_seconds)
    while True:
        seconds = next(gg)
        yield datetime.fromtimestamp(seconds)


## example code for repl
def example_dates():
    g = gaussian_date_generator(datetime(2014, 6, 12), 100)
    return g
